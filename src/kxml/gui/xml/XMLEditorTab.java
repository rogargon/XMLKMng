package kxml.gui.xml;

import kxml.gui.ContentObserver;
import kxml.logic.TransacOrigin;
import org.apache.xalan.xslt.*;
import java.net.URL;
import javax.swing.*;
import java.io.*;
import java.util.*;
/**
 * 
 */
public class XMLEditorTab extends JPanel implements kxml.gui.EditorTab 
{
	private JButton ivjcloseLbl = null;
	private JPanel ivjHTMLTab = null;
	private JButton ivjsaveBtn = null;
	private JPanel ivjTextTab = null;
	private JPanel ivjToolBar = null;
	private JPanel ivjXMLTab = null;
	private JTabbedPane ivjXMLTabs = null;
	private JPanel ivjdocPan = null;
	private JPanel ivjdtdPan = null;
	private JLabel ivjJLabel1 = null;
	private JLabel ivjJLabel2 = null;
	private JSplitPane ivjsplitPane1 = null;
	private com.ibm.xml.dtdsrcview.DTDSourceView ivjDTDSourceView1 = null;
	private JTextField ivjidTxt = null;
	private JLabel ivjJLabel3 = null;
	private JLabel ivjJLabel4 = null;
	private JLabel ivjJLabel5 = null;
	private JLabel ivjJLabel6 = null;
	private JPanel ivjJPanel1 = null;
	private JButton ivjrefreshBtn = null;
	private JTextField ivjurlTxt = null;
	private com.ibm.xml.srcview.XMLSourceView ivjXMLSourceView1 = null;
	private JComboBox ivjxslsCombo = null;
	private JSplitPane ivjJSplitPane1 = null;
	private com.ibm.xml.attributeview.XMLAttributeView ivjxmlAttribs = null;
	private com.ibm.xml.treeview.XMLTreeView ivjxmlTree = null;
	private java.awt.FlowLayout ivjJPanel1FlowLayout = null;
	private static javax.swing.JDialog dlg = null;
	private JTabbedPane parent = null;
	private String idElem = null;
	private URL url = null;
	private ContentObserver obs = null;
	private JButton ivjloadBtn = null;
	private com.ibm.xml.generator.DOMGenerator ivjdomGenerator = null;
	private java.awt.FlowLayout ivjStatusPanFlowLayout = null;
	private boolean hasChanged = false;
	private TransacOrigin trOrigin = null;
		private ice.iblite.Browser ivjBrowser1 = null;
		private JPanel ivjStatusPan = null;
/**
 * XMLEditorTab constructor comment.
 */
public XMLEditorTab() {
	super();
	initialize();
}
/**
 * XMLEditorTab constructor comment.
 * @param layout java.awt.LayoutManager
 */
public XMLEditorTab(java.awt.LayoutManager layout) {
	super(layout);
}
/**
 * XMLEditorTab constructor comment.
 * @param layout java.awt.LayoutManager
 * @param isDoubleBuffered boolean
 */
public XMLEditorTab(java.awt.LayoutManager layout, boolean isDoubleBuffered) {
	super(layout, isDoubleBuffered);
}
/**
 * XMLEditorTab constructor comment.
 * @param isDoubleBuffered boolean
 */
public XMLEditorTab(boolean isDoubleBuffered) {
	super(isDoubleBuffered);
}
/**
 * Comment
 */
public void closeLbl_ActionPerformed() 
{
	try
	{
		if (obs.isWriter())
			trOrigin.endModifying(obs.getIdElem(), obs, hasChanged);
		else
			trOrigin.endReading(obs.getIdElem(), obs);
	}
	catch(kxml.logic.exceptions.ElementNotFoundException e)
	{}
	
	parent.remove(this);
}
/**
 * connEtoC1:  (closeLbl.action.actionPerformed(java.awt.event.ActionEvent) --> XMLEditorTab.closeLbl_ActionPerformed()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.closeLbl_ActionPerformed();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC2:  (loadBtn.action.actionPerformed(java.awt.event.ActionEvent) --> XMLEditorTab.loadBtn_ActionPerformed()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.loadBtn_ActionPerformed();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
private void connEtoC3(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.refreshBtn_ActionPerformed();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
private void connEtoC4(java.awt.event.ActionEvent arg1) 
{
	String xslUrlStr = null;
				
	int currentIndex = ivjxslsCombo.getSelectedIndex();
	if (ivjxslsCombo.getItemCount()>0 && currentIndex > -1)
	{
		String xslSel = (String)ivjxslsCombo.getItemAt(currentIndex);
		StringTokenizer st = new StringTokenizer(xslSel, "=");
		String xslName = st.nextToken();
		xslUrlStr = st.nextToken();
	}
	else
		return;
	try 
	{
		URL xslUrl = new URL(xslUrlStr);
		String systemId = url.toString();
		systemId = systemId.substring(0, systemId.lastIndexOf('/')+1);
		// Use XSLTProcessorFactory to instantiate an XSLTProcessor.
		XSLTProcessor processor = XSLTProcessorFactory.getProcessor();
		// Create the 3 objects the XSLTProcessor needs to perform the transformation.
		XSLTInputSource xmlSource = new XSLTInputSource(url.openStream());
		xmlSource.setSystemId(systemId);
								
		systemId = xslUrl.toString();
		systemId = systemId.substring(0, systemId.lastIndexOf('/')+1);				
		XSLTInputSource xslSheet = new XSLTInputSource(xslUrl.openStream());
		xslSheet.setSystemId(systemId);
								
		StringWriter htmlOutput = new StringWriter();
		XSLTResultTarget xmlResult = new XSLTResultTarget(htmlOutput);
		// Perform the transformation.
		processor.process(xmlSource, xslSheet, xmlResult);
		ivjBrowser1.htmlClear();
		ivjBrowser1.htmlAppend(htmlOutput.toString());
	}
	catch (Exception e) 
	{
		JOptionPane.showMessageDialog(null, e.getMessage(),
						"Error", JOptionPane.ERROR_MESSAGE);
	}
}
/**
 * connPtoP1SetTarget:  (document.this <--> XMLSourceView1.inputDocument)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetTarget() {
	/* Set the target from the source */
	try {
		getXMLSourceView1().setInputDocument(getdomGenerator().getResult());
		// user code begin {1}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP2SetTarget:  (document.this <--> DTDSourceView1.inputDocument)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP2SetTarget() {
	/* Set the target from the source */
	try {
		getDTDSourceView1().setInputDocument(getdomGenerator().getResult());
		// user code begin {1}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP3SetTarget:  (nodeSelected.this <--> XMLSourceView1.selectedNode)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP3SetTarget() {
	/* Set the target from the source */
	try {
		getXMLSourceView1().setSelectedNode(getxmlTree().getSelectedNode());
		// user code begin {1}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP4SetTarget:  (nodeSelected.this <--> DTDSourceView1.selectedNode)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP4SetTarget() {
	/* Set the target from the source */
	try {
		getDTDSourceView1().setSelectedNode(getxmlTree().getSelectedNode());
		// user code begin {1}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP5SetTarget:  (urlTxt.text <--> domGenerator.inputXmlURLLocation)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP5SetTarget() {
	/* Set the target from the source */
	try {
		getdomGenerator().setInputXmlFileLocation(geturlTxt().getText());
		// user code begin {1}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP6SetTarget:  (domGenerator.result <--> xmlTree.inputDocument)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP6SetTarget() {
	/* Set the target from the source */
	try {
		getxmlTree().setInputDocument(getdomGenerator().getResult());
		// user code begin {1}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP7SetTarget:  (xmlTree.selectedNode <--> xmlAttribs.inputNode)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP7SetTarget() {
	/* Set the target from the source */
	try {
		getxmlAttribs().setInputNode(getxmlTree().getSelectedNode());
		// user code begin {1}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
private void connPtoP8SetTarget() {
	/* Set the target from the source */
	try {
		// user code begin {1}
		// user code end
		getJLabel6().setText(getBrowser1().getStatusString());
		// user code begin {2}
		if (ivjJLabel6.getText() == null)
			ivjJLabel6.setText(" ");
		else
			ivjJLabel6.setText(" "+ivjJLabel6.getText());
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Return the Browser1 property value.
 * @return ice.iblite.Browser
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private ice.iblite.Browser getBrowser1() {
	if (ivjBrowser1 == null) {
		try {
			ivjBrowser1 = new ice.iblite.Browser();
			ivjBrowser1.setName("Browser1");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjBrowser1;
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GB30B14A8GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E16DFD8DD8D457352891CCCC4454B4A471356646C6EF43EDECCBDA5B5844365C971B1ABC521256A45C5476524626B6A589CDCD423D354D99988CAAAA88A8C9D0511008918115A892B47C8C8AE6D4A2C4D1D1E6E08EB0B2FF4E9CE0940537765EE76DB9F3664C00B43C57773E70FD0BFD765AFFEB2D3D765EEB7F0E1033E5E61AAEA5C790F4E9027C37DFA7880BE689424556DF2DC7DC1EE052890A3F2DGD9
	C2FA3E9E5CA2884B19E552E58A430EF470D701FF42F413EEA3FCE78B610E0A697091241CCC885B775A3A7BC31773E9951673A675FF1C11816EDA00EA40D9G2285D27E690CBC99BF997CEB65EF823A94C1B06AC81CBB86729478E5F23C8288AB87C822F15C9979F2F8A478C91CB9604668D85CF8F0D7D26AA277D44871E6CE0D96E2ABE7062DA1E5A972C728C8E1E95BE4D748BC90C68411AAC49D5CC2E456545BFD2857EB3715F477D9CB402D2CECBDE62C37D8A5273B455CA14426903A9E9EC827E920E4703726
	925CDEAF11C5A6FC9781D427A2EDE70ED449E5A7090F8A311FBD9C143699290C2618D49FED715F9BC8F169C97EDF25322615827E8AGC64BF399C84BDCBD529266A0F193412FCFB3697253906FF592FCB9780DG16B42471FF66A30D552F47891993E24256852171EA9A23EDF61A0F4602B983A9EFD1FD7875C1D227899026DFE1526581D4813481DC85F8076A61742A8F402D69106A1CF63B53D163F2555AAC6EE3CE0BE8036F4ACA8811F1A745CE275BA288CC57E2860AB568C108DC612FE78498EF2785540D78
	4573057805D6DA5FEA5E4A97BE9996A567B1FF050237B7095CD6DFA6F2DB8CF812EE9351D30A5FC67116B7FDF8D6D78728AE90FF9404C526231CD79FC2DA92BDDF976292E7043D29C1CB71058743A62CE4B4CCDF6923054978410F090C97GBE81A099A0F315C9D78650348AE57C3B2A3DA3493851A109EE0759565C5761B23B255ABE2B4DA23AE5D9FFADA3142C3500257B76F527E3F2095A2B2C236806D8CD39145F7DD018ED9513C778AA1FDCD859CB0316BDFBD520EE2C65F578BAEDAB73D631BACC6378945A
	D6E295F8D637B75378441FGE10655A69D0B1F63A2782855ACFEB64F67FD0A0FD760D9BEC3B4FF62CF4FB069E683307A7D2C0674F955EB205DGC8G91GF3G9682ACDE03F53C6BE069A85BD11322FED95A678FEEGD774CAEEF32343A3199D1D62A9335BEA6E30099EC10E7372C1A2578E3FF44BE87B6E04B20E088E51ED162CCE8764EE360B20CC9E9667EF8733C89C37C8C3DB2CF6918A303B844CB76D906159E676C81F39ACE6C97445E061EB8E911D68B71F029CA183529E5692F9BDC37B5C6540FF5EDA14
	5544DA02F301FF72DA144B64C3E4307C8414DB044E5BE06DA4E4185D17D1C733AE93DD1B8171F35619F445GAE00E800E4006ACC488BA08EA0B38B3E81E281B2561BF4AD6B319D3F540A7A1A3376A141D8BFD5D3DFE91F3E1E695E5C75EAFDAD22F4AC867CF2007CEC68AB815AG2E824CG188F3098E0B9C0FE8E04833481DC4D61632FB7A1C45B4A104BA43C5231B80B71270E073C47E904A90170BFD9A38E11239AC7E4274639D471086CE3B562E977ADD7C2727A0E6C264AAE31F956E944DB8D30C6EEF7214A
	5CC44B8C4427E960F2B5F0ABB5F8F8EB04B2574AF1320424BA52B74C00FA1E87901F033A7D482182013679DA33C744D6FE428D8DD43478B41D450D791870AF760B8E49A03AC40785BEBCF29B7B694704BE397DF7B985EC1BCFD0BC998F6A2001FAB87E179FE7B1BC64216CCDB07CD7B45CACC9EEEBC71FA4B60B12E4F5F47B52BFC7E971788DB59E1957D78C0457A460B1BD975AF6AE72EA2BA6F5046D5868F4767639DAC88FA57787EFD03B2798629BF231BD7C0D5A3DBD601F40F169CE02A3F126F35C179C2D23
	280B5182A98B3FFBF899D11FEB99CA3DCB9530CD3C6DAA94D83F03FA7D262CFB4416A5B67BBAD90FD97CE29AFF9E5018G103E816C8600D60089GD1GF1G499B1007F067B4413FDF437C31BC4CBF985DC84767A587DFFFF0BF25ADD501C73A52F81C506D9C697FBCE9E33A5BDE933C6DF555E837BDDB0DF65BF35704EEDBD7EA345A968B3B21064842B960D034559BEB48785869F4B8C45AE170A4821B873D54C27830BA2C52E92B25DB141A2DD7C4C1E858C85A5CCBF48CAE006F720DB8968E3C0BE32171A75F
	91E65FFCD1533E3E7A4AC3E1919BD9BB193951B796B21AEE2AA5FD00E8936DA028BAE71FC3E27829F4FC17711ED40A7BFB3F0D50D054E9F3FAC4E3072D58CC59A8E1CE13686EF23A6D22256822395FDCE29E10CAE8B514545060FA723D23E0572EC3854AE9DDB1E656DE234AE547299DE52C5C5FFCC8EDFD27DDB6FD1CEE067FD8370F5253673635F825E289EA36200A94E0B8F10CC75DDDECF5387A24D63B6D3313C62333135AC6BBBEE47A1BADCCEA5ACB7370CF6296BDFDB6B9B318093638C511E5E3F0F67691
	096C58A7273F3F25F2047440ED33334F8DF61ED59C582D4AE6AF527167221172B134980267D30E798C98D8BEC835872A30D392AD4741F25424C799E147EEAE17CF4BC64AC7C50FFFBE7BB01F15F5FBC64887C2EAE89373B01EE8867BB17D5C533DB43D4DE93654CA0E4FC565643C549A371B28DC05DC6E879F8651AD259AF255BAEC3509013A155144F877CBB29A5512537F7462015069C7D2ADB91FEC6F88790C24DA323DD0F61834439868C39681A4EEC4FBE1E59D89C7FBC1B60A6A1CB69B6B66C85B4DA3FDD8
	57659CC53F244FE36BD6CD442561FF708B1FA307AF6661FF9BD206A74961EBF97EBB06C307FF2699DE7C96667F6288695F92C207570F90FEC9B33C1A17FFC027A51F969E7E10AEF47E4F0F903EBEA5F4782120612C1EDF2B4BA4631DF829CF04E9ABB188BF91AF635C33EE3DAA6C145956671B53269908FDE0D358128C1FEC509EFF7EEEA06B1D3DBC7F147A9582191B32BC59F899EDA6F93A5CD6BB185E44B81657B7B72CD12EEF76007C48DAE88438B381D85A66AAD22E32DB88B656B059981DCA594C1373A45F
	91EF13F051056B2509902687DC615BAC0E65ED962F7A9D2A2317B0DEBC6013C85AF718FDDCG6EE69E6F2FBCDE049CBE9B5CF9G0B7D62BD6146F8490AF81979E0A764AB63FD4503711A72FD71FA60BB42AFDE3704712272D9F9B179AC3FF83FF8877AB0DE12A29E49AFFD13B2DEDABF46AB58640BD7815FEDF2BCA63FA7F9BC897091GF3B6B179A5EEE2724B59CC7373621AEBAA4765D3DCA9A8488329382EF5ACD339AEBD7DABF7EB5AC684DAB7337CED1B556BFD629112EF8460E7EC463E6E26FA655C284663
	F1F6DAE937AF6B733E43CA3B0961BEBA3C8A5CAE2B5BA3B502C16A45B6D1F31850CA56E3E4342C57776FBCA8842EAFB1C54529E75DG9D5DDA1CF5B0DCB6C0332A63E6A56944A1BDDB233E7BB24AABFAB35A0DCF6ED42E0B671C0C89DB9DC4B6CBE51924EF714946783D0194C6679FB7EC9B114E46CEB2GB0DAB6DFA1341079C14396EC07435E12D1702AE60E6597B10C3CCD5802EB72D1826266F11CCB0738A4DE6EDFF610BE026EB9905B41DB6299G5B3E3272E81399EA16251B30A6DD2E132282DC471F13C9
	7A8793783DG538AB03F15C70AB03FCE273D445AE1AF21DB99580BD4D6AAADBB368EF92B8B57B323A01F04826C67276ED276B5F9DBE10CG30G30BE6AD59731AB2E5F92C27DDA52C974AF0461AD372125C72BE59A0479F1C2CF575D1AFB937A6CC7433CDB657945D61F1E44067DCBCA82G637564258C398E92A1CE61B664F552E9A52FED5B982F615B10579FDCA263GB13F187F3717C8FCAD3B0B51FC36C0C9F37E0407B4E90EFD7A5F4226EF1377FC3679E80EGFAE7F21A8B5DC8F3663BA6DD433BC85394B7
	990B188105FBEA775A14E34E8408BB97A09EA011271B6BDE033423F5A5601A74EB3CACFD21C9D78540727DF316B2DF8970D1G31G8905186F8D1E6079BE6241FC13A1FE59FB186F3CEBFEE3A460E782ACG08FF8F73BDAE854FF71A0479A6C17C2277B14D6B942F347299FEEB1F9A4F72696843FCCC1047F41E4F0BC1621774E37CB8081B3E9D79D9532B6427FABB137FD5F027ED673A543F9279A199F2DE7E3B1F37C3081B309DF57335B3DA6DB02F8873B38F7CE36D70DE5D5B823109B4E7A3249962BE1A5F9E
	EB794351C1473262A25956A8D20FE5F7B7123E2C8D702EA29C4B669FA66B9BB8161D84C91B9D5DB6A29796FE71886193ECB0596FB8C24A25B618006BBC77DE3E1EFD2770A25CBFF876A8116DF4704F850885D882205F01343DFAE444FD34FAEF08FD34F72F2869AA5C61DBAB2CD0FC9B65EF166E36615170E3D224E7693EA90CA61D94102ECFF7BD721B3C835787A72DD1271B2148BBFAC7605ABE5B93AB48A23A3EE007FA4FEDA745476FD06F39FDA7935BC6A204B5FD0065C73A54654F7D403F4CB815DF561700
	F4A5AA7FB2D5BA56D656B5933D51982FEB7BA4094EB1D9BF501925367D497AF346CE132EE0A75A838BF61136C05AD645CE5447B2A331BFDD600FG188D90833084C0A806712A9875525020E51B796BE5B0434C37F64FE451FAE9243A5716E15708698C45DAB2FC2FA8DFDB06ADB03C9E360AB68B134F7C53A81F36E2144FFD47C85AC870C783AC84D882103E8BE48350308B65F3D7C36DC8722941855596A77F5490926375837758E4D4B1E2BA53AEAD99453E793E20E147C9EED16C8753131EC9A1EBB64C8EE5BA
	F7512A54B9AF64BB93E081C07CAE5439E7EDE8CBA66DC2DBB24ECE5AD6D1890CABG2DA55836160F1167D51E115239CA34F87E437A6DDABCFB5C1D1CE55F72104CF3CCDB409C9B721E8390D302BC6FD80FF6F7FC8972BCE5BDBD2BD38AB683C0F5A9727C580834EB737C4C0869DACB35F876BABF506259A2D9B85BFE2BE2D85707323578F6C199612548F752B564FBC6A972FDF208703D887C09G7AB2647BCEE9ECFC4F9EB1DDFE19D63A1E3E311557BFE23AF24D724A7B47D6DE6D08690CE5DA75BA3525CC2BDE
	79A68E57E85E75105AE575D65F0B75E6A943FAFB39176E8703FFAEC0AC2FB7A160CC5468463F358169CAD47EA5AA3E98ED3B4EE21F3C3C8C7B645F9FA738725DB0466D66F6D38331595126EBF2DA294D4E426EEDA47396275B5AEDF5A06EBE0A6BF43A69C6955B5F7D81DDB3E801BCDDBC5F5F9D8D3E2F7647235A7BEAAF9F555ED7FB75E868BD6D3F9D8D366F46682B246B8861C05BECG067BA6EDF38B411F40F1BF9BA2B87D9E305977A0AE0A2E9914013F0163968808B3F1DC048EE560653899F4BDA0827CB3
	B96E72BAACF7419E540D773388EEA97817F35CEE0AA373074C3D081B17F9BD7B54A42F35F23E23094F4AF8723A4A403D6E54D1465FC463BE36E19D2DCF0FC774D06347E0164CF2589F24DCC1E34F733859AE8A38BF713FDCAB65B8751233EEB757792FE66118D93E975B631E9C529EED608F871841E57958AEE53B1A3B1749E8216CAE86B7E92F3F5C182ED59A036BF50DD1DB2F0F98C99B735031C12D3B470DF9BC4CE754B4CA221D304C621C2669A5333BDB8C507D8BB4BD8B8B163E5B982CFDB0F9FE69924A33
	C9F2B6FD48F5612633CA99694B19BC72E437985C6AF2AD99BDF0AC380C669D5316510F0E851751CF0E0DAC231F9D8BAE23270E0DAC235F9CA3EB1A9DD60B55AD6FC249F3F637D2B67B849CB73EDA9244B6EEF6592C92D994E463FFCB17FA7CA76D39856456D30E637F3DD6545B8965283727AE52330E600F83D8DA0EFA7B1F36E0631C7021C91773E130F91C011E05AC7A104D57F49CFF0C624B95F8B60FFB5A0EE7182BA1EC760738063157231487E9FB0C4F0D6754B6ED7ABE6873G2A77A11F49ED48E76BBE64
	33201D14B38D7CD1GB17B104F127521467378FD4178FC035A0B097B54FC26E793FC72BEB51F372DC7BE757B21CE76A31F022464F38F6FE37A331107587D4843D7F2C99E7A8A13AE9F203C82F9F875DAA89E0C9541F8F8145AFE268AB58FBF27F8DB051A0756A164418BE10BAB1007A77CF8706D6F5E53274417F3FCEF3F923F1F7783C7FBC371D1FDA0989F1DB6C2D74B81B59FB60AB79DD07371EAAF72E10330388348477E81E5FF3F075335472FFFAA2FE4F4B448EE9B382ECA2D7E690563D4D65C7F9275DF96
	30ED0BB5A4AE6BAF6A9D9659A8E2FBC7F15456917502F00047F71A48DEE6375B6C6A31F6FA8C222753EDF5C9CE68000C9F11B41FDEA1EDA39CE8198B3084207AA39FDDAC0F8786C87F5365B65B219BE9F6091DC2D19535B5783AEBA4240982D8883094A03D8A77923E3D1738B6F307E863F5797BA1753EA40B3B61B411255D4A387270BAF9EC1844F7D5296B6A778241DF2D722D73B0B94C22760E9564504E4B7C6E1A95140E4B4EBE1057F2CA7F63FCEFF59A7823G62G16D431F596466334F59847F0905A9400
	97E0BA403C032883CDFBC91D37B81D36DA33DBAEEF5DEA02A393ECF307C76E07E61FD276C37187D9B97AC3E0539D42F6B9B3CB2D4FE507FC75E1B894CC1F3FCFED0956C3CC966BFC6D1562A7A870CC1FABA81E7823A02C70E334819368FA52CC70C7F35C3BE98437G7C0BB8AEBC0D5B289CB73C115A1E5540D7B5627E055A7ACD6037F0DC9E6DEBA703FFBA47DDEB437CE6F35CD74F905CB2702757E0BF9D51057BEE79B55847FD2F0736E5705BG42EBD01677D9C3758DB3EA7CE5998DFEA6334769783620C63D
	2E78944547572857955BAE72F5C588EB2AC57ADF236BA4F3413F08636A6C486752DA247328C3607DC63362FB317D73BC7B2986F99C9857B2185EAFBF2DE5E76454C19B2B43FABDF18E472E6ABA2C5715EDC42EDE70CF83082A6367F35B54759AD3672B4BC5F5415AC8A49D4F1756296B759E0ADFDE272E57775B31DEB38DA61DE440BA2CDF0FF598EFC01A5232FD7536D671FD577A712F43687F83E58CE62BE52E2F7749B92FBE184C57EEA0B2AC2ED74B7CAD0A2F2ED74BFCE6AE4A3C85426655234CB306D06679
	07D16631C3BEB9BF25783EB0B47E72989857B2984F66DE64390173EC357978F4AB3E7F5ABB7EBC6758461F67C6BADEC840EF78E12C7B27699A49F470C7F15CC703A81B399CB7030E8D7AA3B01E9E413159F6051CD557BC46D062F7BEF5DFD3834963969AFF2B00F7D559BA9579AE04BC4B9AFCFAAE6FD7DFBB8EEEC9C91B4B6D3C883333F63748A6031E369A0B4569706CE903425B2070B6A83C0D975E26AC1C9CAC29F35A8895A55D56AE4C7B9B57848177CD1F3160B997236BDB02306A712077BFA3E59A67B578
	76CDE75C38B9157533AF5035A512AE89420B9A69F86CF7961114CD66CEA5GAC7C28DFB81189396B6B8B3F6A973EB2A07D377C42C95B7EF5AA8BE73C7D3095F91BFD4B37845B7987027266EAE4BCC54A6E5C994993134FF8D318FE7EFC58579E7EC45741E2A1DE82G6BDBDED903B67CB240959FC59B757992E2EB7379B259692E2C2CF512331FC6E6B0B259D52EC559D90E62985533162E2902FFAEC06CD1BC1774B5FE9756E0FADCA8BFFC0FA6CFC519BF8EDBF2D4BE1774092F3EB2668C2430B23F3F8E4BB4FC
	027535E41D3A3E6ECED14AFBC3263A3EF67855C7C3263A3E5EC9D506DF49D4579726E7725A193EC9505EFBB3F7F408963240A0601CF471A9DC073E7A894A2C6EB41159DC704782AC79845B6F03D938A6391C637E100D6D3C4008FD607C9C323EE1843F89C082188CB083A09AE0810F97CB634503BF99A06F98BB4BD8F10C1DD5A46772D83CC3B9AE8DDDC3A07993F706B1F00CB34965215FA8FFC74BB40D5C271E8FD9761B323BDAA30C5405725E892EF32E91826F0D290175AF7D9564BCD21753A1C59E2376D689
	11F5ABFCDB0EE17FB9A98F4FAC459FA3F7792F1DA6AADAF51C5A67E90691E857893E730D79100640BBB23E6C38EFBE474A0A58CE66E8F6185B12B5FDD65E7EB3828F6F93C8F887ED18B8077B69D934AD43A13F99GF1GCB0E33BAE669CA5B7CF9F8602C0F0748B664E17971407AC25A53E4B773844C15GF2E5DC4589B58F5F21F39651E2154841E0A657474EE09BB01CC01D3B2DCBEDCF351CD05C7FBA61CF4BD570B33BE907152EC9496512BC99FEAF454FD460D91F77F08F1EB10A06301CA6ECD7BF32E23B72
	F25C6B94B79B7C731B104E380B8497877E259C77AB0A2B104F40B2DC4745E03681263DDEFBA0302D8C86AD836B689FA903555F9ABBB15E4D3E8DB50F3543EA33CA1785D6175B6D589FAF871E4ABFA538337682B90F4CCF8379AC14F12CBFACEF45796B55CF31BF6CB8CB7BC3704782AC7994E55AF2AE547CF5392A2C4C1328A357683C2970245A661ECC7195A755B6773AB634390D9096FD9275A167BC21B52799461DE6445DFE817546580CF4FE251D603C600F6038FF2538A870137356723D417631580FA45FE0
	E1910AB0D6C67D184A8835C724542B454DF43E3F3EA0C47C05B2CDCCDEDF4EC69996367039CCAE376BDBD0B6B99B285D8B7E499C370562E6373033688C77755C6B650F642774CBAD4165494A7871F51721EEFB216449E4786E50E8E4485A17379763AE5020BDDE463176EBBA6BBF26755379C4A244C9EE6167B12F780F8795ED601547031303B89E94FD96D8561B02EFCCA0D085F1881071003429264F546341F73B824734B74E137258FBBAD1D7C864D44DBF924B97A468581F208894B08A7CCF41BF0200CCFDFE
	1D208A57702B632B7C292A7C9564849024E202D36C0B9640690473F49FE4906D4EB6A2C7A82867BC2B83E6D3EFD923BCBB3A28E2E1D83620BDCFD8A027DBA63B4BE7A5CFE4678C725B093DD0F4816CC0GA30085408B90F9814F87DCBAC16C5D9AD757C9F9AEF74C6CB0F753DB90151500EE3403CF3914AE371B17C36E29E881636BE589678AB3BAE304B909F1C16FB0C4DFE07C4449EE51FD4993094BF87B060970A634031D85D08D508AE08388EFC75EDEBCC1E8A4A77B40C42911A4F3E78F3D5D01875A488992
	9F1AAC7633B57555F4CDFD879075839D2E33EF63385C9414C1F240D94E110025DB31F6EC69BE3E6EF4ECAC2CDCC7463C696D6ABD05BA0A1F5D2E5E7FF12C4539E3B4046518705CCAEA871139977C11GF3G96GAC81904CA873FDCDE542886788DB1CAE2358AF5A94C7C898FF8F2F9B1BDCFEFBAAD43A9CF330753A87695C2C484C78FF13639F2178EA851E4925116269DE87044D87E0F6F982BF3BDA5081ED8D4084A0F530F367EC8C78FBF6C1889AA3BA147D7AA7E7C999C70DE4A3E92F0C5BFE060CBBD6CB0B
	D76271DEF410F89EF33FD8AB61BE79BD5DC4CF710E8843BD1D6F4B2FDC0E67CCA3FDB53BA50B797D41CA6249675A653B0529394A7971CC1927859DF856FE3520F58FA41E07E7D4E81D45CF646147B7EA65AFF4C29EF47C28A45708E57AB62611FBCB8EF120009F52BF8C03DF51B60B55ECF3F6EFABAEA8ABAE58DD36837B1A1F9914FDE8D97F63C14F5F67F44AFD0C6C1A3E15BC11653133DE1907B16F47E13AA0F918643436CE5F5A4696013D2710AE787E98DF55F6724D4A301F47BEB13976FE21E05B13E16F86
	A9E3261CF712220C42C73C723D17174F627C274882BAE841B51F3402770440B50C92B6392C2C2C17BAFBC4CB2DBC5514ED777D6750761FEEC15BDDBCC7720F837FD2GC1447D0C1F707384F9008B64B9696360F250B9FD751BF0065AAA6EBED1BE735505EBA4CDA25A135BFA501E14B82E16622603FF0E0836E3A959929566F17F816AA7F7CB187F5FFB463A3ECB729CDD3F746C184B984DB9AE562FBCE5AD8891A7CED476AB8F1FA3E32D53ED05510E5DFDE4F6E341C51C33AF9151EE3C6AA0F79FFDF77CB10F58
	73EFB2BCB9CCAD638E59C95DF719ED9E5FDA58C4BB5709AE4C73A1BB29831B58A5B13DDF582C547B72A7E704E585517B26AE464755AE1F5E7B64FC20B560CCE7172F0E96F6795757E27033FE7EE95ADE123A546B8B8994AFF42B5797FAF87B4A04B0299B752F779C5FA363385967F0FDC15F03BA97C65BC99E780BB96ED60AA3F74348BDAE064BED53529B1206249D0BBE856AE609E6993876730F16416AFB677940F3883567F12C2C6EE16790DA413575307BF1EC8E740D8B2853619A7CCE6FD16AF447E73E31ED
	370CFB2000047BBF3200F7651FE9D70FB7245C289E5451FB4E911A6BC472569F764F99A6251EB6BC772FC175F43ECC5B529EFFBDE53CBF4C4F2067DB996F6560B6D8D95DB35E5F4DC55ECD56C05EA52B1277D39BFC3C6F11F1ABBEA2617E8FC3A06F1FEED073CE4A1DEC45FEFCE6AF365999D614C7FCAF713B2D5DBD446EE0FD76FA72A917777815510E492C0C30C1ACE311D5EB2C40B2A27A48B71BB7EE9BD4C6F8638DF49F05BF62123FAF5CAF5CAF5CAF5CAF5CAF5CAF5C7F9FDDE6039B2E615AD446C5134EF0
	914FA008D7F11E9E93F62F30BCECEE50F5452B9765BD6E0B6A75D2EFBFB98F3390700B8112G743DA6DDBEC0B900812095C06A45352E1A8B646D903650F5C4BEF5DCD9D957ED907B2D1DA2F99BC63EF4C197D1D91A775A499C48416FBB6CE8D75E4DE73812F6B2774243B50D9644173793FB4FE23351DBB88CF7201D3D7560919D9E2BE46D275165306A76CC7FB07A349363B5E6005802530017B9GF1GCBG12B9EFF16D729BB19A6B267516EEF27F033C02ACE1D95FB5853FEB7210E96437139FB1911EBB1C12
	6434137C917F180970ACB9DD94A95FB1B12DC41B14C515710BCC44CCA473CB02E6731CEAC216BC67E9D4FCCBEB477F8C5954F1AD03711C5191DC6E599D5AF7FC5E6A503E5F3725A3743B195BBB023F1BD95221FCB7134D0113CF613CB84706F35B9F3235D57037G74F07CE394CF6E2ADC3531FB588CFF6234DA06A48DF1DBEC41674255A142826B29A7208CBC0B92EA1FFD3473E456EF25737BADB30136F89B2E4D6DB6795DDFE267310E382D16DAF3B7BB104566CDAB32F1BDAE530E6BF16574AECD8378CDGDE
	BB4E595E49A1F99FF73A259E816774FF698A72EE921DBD4A77E8F3712E6AB4BB4E89EB8544AD64383A8A44898E44CD5A485FE6F060FE412F697BDEAE70C7B830DF996E5D896EA97345409723G5964F63AC437F419E1E9F7A56F774413EBA1F88F2D773DE0F9C06FF49458BB51C14EA736183B855CAFCA25FB1DF3000E05G09GFA27C91787D086E0GE885308104834CG0886D8G908F3094E0B9C0268B7918E45F91028F3982E9A769B6333B3C72997433A36DF1943A346E9F2706BC9FC1E03326EED70D18CE
	8DEC8D6CBF68DAEF35CB3DE774BB0AB73A54FBC63D67D03FDBA1EC3E8B5B6F63FE67578BAE41D8FAA9F45BE4EBA5CF727BFA8D1758DA0989DC69926B9BA2AE11B887FA72C264435A020E1D31B5F734D8A51B4856967A69D9D3967EEDAF3193FC3785F18D69952BF29DC83E7FF4113C3720DCC27725ABE9B8F132716C0963ADB5467666A6E3E38B5E5D34AB79DF84F4AF9D01FF262F67068A08ACA0EE1E5B242B82E881688118G9089B0470D3AF858992ACDF192955A487A6726D6DCDFDF6846F54B474FE01F1D48
	F1AF1C417575CC8F566BE2FA76A01F7B1F277E497CAD8C4759510CFDA47DD846BE3C97BB1AB2463A1E495657A71EAB8891874FEE30F574DF72BD13F28F7645E73692BD32B8BB2186D00F4C4D94A7D9A80E351F0B67317D74C05A199E6CD73FF39E730C77E03F1FC063E6CAA6DD91C03504F1FFF1015F6B14307CD56D44857BC9DEFFDBEB42B3D953A46C27FFB2CCF8DC887EA5G69FDA6DD81C0B900914084606DC3DD0BF0960550B5360964D3B4465BF35948DBA464935B07746E4CC15E747D485B99FAD72B8A7C
	ADG36FE0C7BC9AE72965E0F3C056532B31244E6447545499B103F797D7CFC165F3D49E500CF9F984DF95549034AF4791026ECD4690EDE77598879DD216BCE476A6FED7AFE2C81E8EB857082CC8618B900F5965BC76AB7F01EC2DF2FA4E718EDE06949731170FEA263812B055A8E8CF7F3BF11F30F489601996ED69A8FE6B80AF83777133E5453E9F6582C8E3149EC11717F033E5356F1D992BDCD225B88E18CFFCFBF69B3ACE6494C7C337A69DEBBA3C7CE9B55CF66B020CD8E0F7C700455AB5AD85837D5E11D17
	0F19BD3DACEC61C0F03B786783A34FC76287585956EE316532CB26775783749D0E2EAE0F4865703B01CC0EEB74B4B949C44B69E0FD473A53217A0EF9834A357C93A574DEA590C5FEB30B612C83845750C2AFD64A385FE6939A58DDCB3CF316B62CF567AC9672CF9840B630A064BD6E60BA790BB126DB9DF007EAA4E076C5943B9FBE2036BB9E20F83DD7EDF7D4723EA59342A4AF3FE7182BACBF5E4BE41DA83B42E56666DCD61F29BC62779EDC119CDEA53BCD60DAAEEB59E78D954AF4DEB9CE046C4E84F72EE63A
	DBB6AA53AD1463AC165DA45955DF712515754ECB3EFDE7F75982027C2E0B173D35892AE836D92F502D5EE6086868E6619B8703370D4D03A3370D6D035AF375DD0301F375BD035AF3750AC165DC1D618E8E12BE259BEC67D69E2F16634EF05C911AA7411D766B270ED13A883E412F2FEA26F48DD0DC2B0CEBD5604E4838730324ED814BBD64209B43F58C52B316D61B5C67F451B8E4CDC562726825B4DADDE6855DAE0EA3F433B7D5E23259DA8D699D6B58AFC2F1BD784FF3827FDE2A783EF4EE7C57A9EE9957B218
	8D79DB3677FD0535DF06FB1E624AE49CEB4F7F55056D59887870ABB87E57F4232DB07F8A5A8A4EEE92F79978B386CD3A42C1DC8B3C2FD9F9472A684E3BB56FA3991D5F8F2B9A144F7B8C7A76EBAB9E71264877396DC873E31C66D9F624B9AD856B3AEBA8F8FB328F0D5C1E7A07345B5355214076F44310F6FB3AE9A830BDC58C31F544EEE87F6C619E067F729011875B17E747BD491A8D1BF7DDEE656F9C8C32F9579CF0E38659BBA2EC5E755BB32166DD72B9E3F6781571A790BABC3EA9160CFF619C19478719CF
	1D2ABF5952D847E7D3282B2E73E39B0F0646186E416BCE47462B168B747E7C20FA9CBBCF71CB86556358735C7ECF0230162BB80EBDF3C1D97EBC4047DE9D0D8D1AEDD226CB1053AC135D74EB01F9486B3E4341F579196111F5B9E1D8DB171F9F8E5465BF8DEB6B721F0783F579B5B9DFB7FF040A61178FEB69B213419F2F5B86E169DE9FE33A321C31694A93F44E13FFCD2DABCFD3FC51B5352E3467202E14C35874EB28ABCDFEB64FF240E78E0DC6D726EED026AB1453D4482ED1A38F56974E6F457EF1F78A627E
	3DD759BFB25CBD0301FD7F6CC1E55F4F6AF21B0E4EB34C8E0B0D576FF69DF953054C9DCE0AAE376861C7576470D29D991FBD56AB321E6C55E97FDE45819D111953F372C8ED3D83ECA1D17EED2462534AF59EB6569C9C46B924E988471AAE1AFEBA782381968E214C3F25F87F60C145F7F576780F5BE746358C79DEBE1DF7A7G3FC9C37C8CE6BD3DFBBEEC52658CA36E26FAFEF715633ECE6568827FB40E3BA0609BA933B92EAE152685FFBC47C525E2FECBB8AEFABF4115CFB0699AA6A02E3D825FF0E963B8C79E
	3E61626238DF66E1FED7B92EEFBB3E61924BF1DF5B087C46F35C71DE64B711633E4D5FABC866382327157C32F5F7737BC4EFE4DB1C1A2B8C1F6FDD63432339AA576B9B8177A5C7278FEB3A47166E70F527E37D53F3547EEA38C15DEFA5D2FC4B8D6AFE2B2F9B7BAD9304AD3881571F566B69BD1509A61D812087E082C0A4401C09380671C3DD28F5A736D322DEF77ADAAB16978379A4CFC4DB720F2DE8CB1605E17B5EF806446D817F840069E1583E4FDE90381CBA955F0967473FFD27DD987F767D52856C1B5724
	A26EAF97F85F4C7B708FCC58AE2243785BB0D958AE96F05C573330DD44F1997EB247A737450AEFB1E77CE5B8B42EE5B01E3BF383E5E84BC5993E2163E35E861461F2AE2FA983A8434CF044A58E7077DF42D10635816F5BB7047B466536F07FB15A85FE56961F2563D6F8387A0C73920A0F8CD71FF13669700C73EC88CB1F04EB2D5EDC7F3B0637D27EEC906E65F18E547B5FB5CCA1C32BFC5770DF6A712E611CC9017604729EA101C2796EB95E1F0F19243EEB7843E1B25842C45DFA85E8B25BEAEC56EE877D258B
	C65FB343389F99BB896F693C2243F9CB72A4F6FFBE73C6A867C676E6824B77EC2ABF8F31ABFDBC7CB895F9283AD17B7E3C1207269B599BGF8FF5EF2231A071F6E8F3CBF7F1B7D58B739A0BE43C550B1AE9C7C53EE44FBB107D77B68FAA1AF545B84E9AA3A54EF9344A868E2F94750636F2C6C4769F898CB4A65E5D72E75157DE8AF161DF113F63DAA6F102A6B3560A6DF59324DCE36EC656FD7945F035D635FD7C40EEB99EC9CFBC79FFCFE35CDBF727CEA27DEFBFE35DB9FB83F5A27571EDFD569834F495C97F0
	07E2F4B27B5E98533DF45D69D83FB5050E5345B729ED0EC80A2F38C9EDF3ECBA03B600814222EE42B655CC47330C49A6DD5EE4546B3974FC90DB3B7FE1D6C188DA9AA6AB777D1E207DFA9B60FAF8DEA5D93E3CD23D23490B757DE706F1CFF67AE4EE3B8AB89E4C67383F8838A71BB099470884BA97CA647E9728DF38997DEEDDA87DCE1C7CF93CDBB1A5E4997F685D92A6DB3AC4AD77213975E4CFBE687D03128E274D322D38E0B73B04406C3F1F5763DEE2614DD8DFAB73FCF93EC477C3156BD24D64BF9EF97314
	1CECBC525042746B6D949CAF5BA02F481B51466CC841FEBC76E634B12751387ADB207F85A83F057F6EC0AA52E33CC57B7E9C23117EA410CC632B7B15F72ED878064D3E700E3C515E4BE0E9693593797B33C2DFBEB53D57AF5F5779BD1270DBD03EBFA7CBFD78DBBDE7FC5FDFD1FC3FFBE67C7B782AF1AD03712A7F40A73F83D9232D87967F59AC6559AD165F0192DFFE4383234D0F59BC93795E607CDB58FA6EA2F0175E424E5931755C97041157F33FDB6A232171903DF7C4FFF1EF373C8779CE0AFA8F1264AFCC
	B169F226E07F3328DE596797833EFA4AE856278AD246F6E62AE444F45AE7263AC7CC2786B68669D3693CF70AFAECDAC37126A96A31694E949C1BEC9096476574EA2A327C7288132EA1E2B4F2DA6EF74E218D5238C6C847687846B052918E7167C7E03F744AB076E14BA278BB61749D626229B0D787E81B0AF11BD3304DCBD3B12ED1CF624E817F820045D3F16C7AD3FD60FAE0D23DF2BD1071330A6EA1486B590A6F99A9635FCFFCEFDC4B105F4651874AA1CB2F148343E55B82636559826595BD2A5FC08B6475C7
	E3CC777AF52713EDB52AC34B262A5B495D94AF5C2AEEA76F8B7C4CBF0439EE45F6529A50CE975D6A53772537866ABEABA7066A6572DB556FBE44D2FC4E17546FBE1C54633B8F4590B66DCB7CADA841271333945F4542786BE77D381641F44C19026FB9AD7B92365D95FA34C57326219C9E2572B1003F954045713F207849600F82D848712DFA245DA527793C68B670B2AE71B2087F9FFDAFCD8924A3E2E36BF4BE66AD05F2055BCC3AA200AAGE2F3B35BFF133EA0C4DEE87B33F17541F53E7B3C9F4A38039F10B9
	1C57E37354B96D9DCE9EF7729136375B6596BDBD64398E790EEFDA1A7A0EAF212565B6FCEF235F6F3752FBE4DA2771704AC275FB9DA4FC76ED782EE88C9F336681AE69B6DC675E3B476FF77E58B97643B667007C2AA86E2D242762DB83C5DF46F122190D0F607782CC7BB20EA9D5E9388F9375E5AC275B6677FE296F9CBB95CF2D53AB1773CDBAF611C512841E5F25C2DC934A3B1D6B6EF50F7532ADB346F4EB7C4676265BC756FD56B77D144A48F23B3A4F0C23F8576D6ABE73CCAA5653D588CB607C5624A94BB7
	C43272DBE55796297D8ED816709D5E57CF00B8112AF8D1601F8F90274033F47D054A7216486149321BF107C9D7F007FFDE2C1FA924FAD2FE07F2FCFBC2E183BC2D78EECF9D7F7E56BB2EE5B01EDB53F0FD58F88776374F8D617A3009638C4358875BB86EB10A1B867EB99CF71783730B61385BF2B06DA20E1BCFF149604F3C136FEFEDA638C270D7F15C54C24C2F09639E3C0A74D9B8AE0F7F26170B63AAA8AE927CD1F762DA6BC72924AD1A794AAD2E275CC065B09762455C097347DD6419E5014DD74E8D071A2F
	48EF4950F381AE68A0C537DB34B4DB2F08BC7F7F2232DA86F98BF761FAD08C15D5B178AB6E42F9D1D44E48657CB20774B1F63357EA6F3353D2D8FEFF22B26D013C243B105FC7B75338D607AA6EEF282CE7C33CE8CE4F77292C9703FF69DDA8037B7678E4D0FAEDE45ACEDC8BFC0FEFAB79199979BB4BA17038CF8FDD4FBC1F251F22F83BA74231C51D5EE035130B07CEC7516E3DB0A95D339B5345F8FC69A665DC5FBAC5E51FAF6D2C4DDB031739F74F7EFD7BD92918F6EE3FAF6D2642D0746E592724770FD7FC69
	6E3FBADAFA595B956F655D8483751C9705B4C9C82BA34FF2F95C42BA1E36119EA4CC685FDB197A5C2C5494C15FA82CE00B3B0D021E2C50B68AE9F48137D1C8151CAEAFF9C0197C2549A0C842769EC9F2D516168E8C8C148C6CADF13A3BCBF79FB8F02034ECCF691EBD3B5C162EDD1E4B8E496C150495A7C57238176712B0C4C78672072306GE42D71E369A7DF7B7079585F1C72248AAB9A0537484ECF33682687CAC58B792138D3221B886B303052C5FE420668B3506C21CE1AC73AEC930DC2CE57C971D21F6811
	C48B7F5DC60FA4649AC9C925FD1255D65AE07674507D0F0F0C021E5C0B150475AC58E6F6F41732F32B9FD146F5B5851466D5B23D5914DE12CB894FA57B61F56FEDBD3AE4DE2A10F2D8D8C558BDEC6EA44F4E8BAB259EE2AB019EFBDD9FD7530C528750C8C8056C5E616C93E6CB48D9ECCE748F36BC754912CFDF7BAC85ECB137D0CAE312CD22929E43D257E3F6C3D1223BD1E2AF5D977230977E9AAE3505FF7C3B94C1A7B3C92AA05D6B02BA69B25B2D364B70E1208AC4ABA7C3E202642AC2C4D1825614D9FA7645
	476E7DD5D5D2A2E4F5D8C82377060120CCDF2C63FD768E51FD631CBBB62D0ECC18C268F59131E13EAB69F1F972D36510F9010AE38C6204175C7ED8599D7F765FE7A9613E24123005D591A4AD6D961D76521A2EAE2BC36499C0FDC1761BF876A4CE09AA4EFA6FED39C71FFA2383744BA0245A4B4A687F5D747F9E72FFB7456C26185DFB2052120410FF6AF02F17701C697553F77282A8DD9577436A659006DD9120EB843BAAD0E988FAAD2FBA624B22D133C9E2723101FA73687FF746C67F56A074CBC2EA6BB1A3A8
	8A51D370B49AAAA5E1EB295B6914CA2D64B413C314CA3DF6DBA974G254ADEC05FEC6E978338177354FFF652887964C0568596E7E79F99178B58BDF402B6A04A50E2C0342648F4C1C426779799EA658AF6901B890F24999FD96E7617A57F7BFFC5972A82F5A1B825232C82625BC37E150F8F4DF55EG698AC1E97E3FAA5D235EFFBE1A1AC803A5B70040E9EDA6CD734D13EC4E2F5D027F19B5612C974604750166D64D2D7F714C1CF6C3CE0A1082568F3BE686A6843D03C647FDF202E262BFDF5DF4B0FD3940A89C
	FEC36993067E79683D68155F33FB3DD07926E96B4CA7033E0B5ABACBDE9718653B9F414E6C3D11CFE80F827C02D9F8C66FC47EAEA1783D7CE63B59E6134C365E9A07055C512FA5778185BC13205FC47277E09CB910052D5EC4683E28C8733F81D0CB878874C6C22426B0GG7C23GGD0CB818294G94G88G88GB30B14A874C6C22426B0GG7C23GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG60B0GGGG
**end of data**/
}
/**
 * Return the closeLbl property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getcloseLbl() {
	if (ivjcloseLbl == null) {
		try {
			ivjcloseLbl = new javax.swing.JButton();
			ivjcloseLbl.setName("closeLbl");
			ivjcloseLbl.setFont(new java.awt.Font("dialog", 0, 10));
			ivjcloseLbl.setText("Close");
			ivjcloseLbl.setMargin(new java.awt.Insets(0, 5, 0, 5));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjcloseLbl;
}
/**
 * Return the docPan property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getdocPan() {
	if (ivjdocPan == null) {
		try {
			ivjdocPan = new javax.swing.JPanel();
			ivjdocPan.setName("docPan");
			ivjdocPan.setLayout(new java.awt.BorderLayout());
			getdocPan().add(getJLabel1(), "North");
			getdocPan().add(getXMLSourceView1(), "Center");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjdocPan;
}
/**
 * Return the domGenerator property value.
 * @return com.ibm.xml.generator.DOMGenerator
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.ibm.xml.generator.DOMGenerator getdomGenerator() {
	if (ivjdomGenerator == null) {
		try {
			ivjdomGenerator = new com.ibm.xml.generator.DOMGenerator();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjdomGenerator;
}
/**
 * Return the dtdPan property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getdtdPan() {
	if (ivjdtdPan == null) {
		try {
			ivjdtdPan = new javax.swing.JPanel();
			ivjdtdPan.setName("dtdPan");
			ivjdtdPan.setLayout(new java.awt.BorderLayout());
			getdtdPan().add(getJLabel2(), "North");
			getdtdPan().add(getDTDSourceView1(), "Center");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjdtdPan;
}
/**
 * Return the DTDSourceView1 property value.
 * @return com.ibm.xml.dtdsrcview.DTDSourceView
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.ibm.xml.dtdsrcview.DTDSourceView getDTDSourceView1() {
	if (ivjDTDSourceView1 == null) {
		try {
			ivjDTDSourceView1 = new com.ibm.xml.dtdsrcview.DTDSourceView();
			ivjDTDSourceView1.setName("DTDSourceView1");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjDTDSourceView1;
}
/**
 * Return the HTMLTab property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getHTMLTab() {
	if (ivjHTMLTab == null) {
		try {
			ivjHTMLTab = new javax.swing.JPanel();
			ivjHTMLTab.setName("HTMLTab");
			ivjHTMLTab.setLayout(new java.awt.BorderLayout());
			getHTMLTab().add(getJPanel1(), "North");
			// user code begin {1}
			ivjHTMLTab.add(getBrowser1(), "Center");
			ivjHTMLTab.add(getStatusPan(), "South");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjHTMLTab;
}
/**
 * Return the idUrlTxt property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getidTxt() {
	if (ivjidTxt == null) {
		try {
			ivjidTxt = new javax.swing.JTextField();
			ivjidTxt.setName("idTxt");
			ivjidTxt.setBorder(new javax.swing.border.CompoundBorder());
						ivjidTxt.setBackground(java.awt.SystemColor.control);
			ivjidTxt.setText("/root/internet/xml/rdf/rdf-syntax");
			ivjidTxt.setEditable(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjidTxt;
}
/**
 * Return the JLabel1 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel1() {
	if (ivjJLabel1 == null) {
		try {
			ivjJLabel1 = new javax.swing.JLabel();
			ivjJLabel1.setName("JLabel1");
			ivjJLabel1.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJLabel1.setText(" XML document source:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel1;
}
/**
 * Return the JLabel2 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel2() {
	if (ivjJLabel2 == null) {
		try {
			ivjJLabel2 = new javax.swing.JLabel();
			ivjJLabel2.setName("JLabel2");
			ivjJLabel2.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJLabel2.setText(" Document DTD source:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel2;
}
/**
 * Return the JLabel3 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel3() {
	if (ivjJLabel3 == null) {
		try {
			ivjJLabel3 = new javax.swing.JLabel();
			ivjJLabel3.setName("JLabel3");
			ivjJLabel3.setFont(new java.awt.Font("dialog.bold", 1, 10));
			ivjJLabel3.setForeground(new java.awt.Color(102,102,153));
			ivjJLabel3.setText(" ID: ");
			ivjJLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel3;
}
/**
 * Return the JLabel4 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel4() {
	if (ivjJLabel4 == null) {
		try {
			ivjJLabel4 = new javax.swing.JLabel();
			ivjJLabel4.setName("JLabel4");
			ivjJLabel4.setFont(new java.awt.Font("dialog.bold", 1, 10));
			ivjJLabel4.setForeground(new java.awt.Color(102,102,153));
			ivjJLabel4.setText(" URL: ");
			ivjJLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel4;
}
/**
 * Return the JLabel5 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel5() {
	if (ivjJLabel5 == null) {
		try {
			ivjJLabel5 = new javax.swing.JLabel();
			ivjJLabel5.setName("JLabel5");
			ivjJLabel5.setFont(new java.awt.Font("dialog.bold", 1, 10));
			ivjJLabel5.setText("XSL:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel5;
}
/**
 * Return the JLabel3 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel6() {
	if (ivjJLabel6 == null) {
		try {
			ivjJLabel6 = new javax.swing.JLabel();
			ivjJLabel6.setName("JLabel6");
			ivjJLabel6.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJLabel6.setText(" ");
			ivjJLabel6.setForeground(java.awt.SystemColor.controlText);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel6;
}
/**
 * Return the JPanel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel1() {
	if (ivjJPanel1 == null) {
		try {
			ivjJPanel1 = new javax.swing.JPanel();
			ivjJPanel1.setName("JPanel1");
			ivjJPanel1.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsBtn = new java.awt.GridBagConstraints();
			constraintsBtn.gridx = 2; constraintsBtn.gridy = 0;
			constraintsBtn.insets = new java.awt.Insets(1, 1, 1, 1);
			ivjJPanel1.add(getrefreshBtn(), constraintsBtn);
			
			java.awt.GridBagConstraints constraintsCmb = new java.awt.GridBagConstraints();
			constraintsCmb.gridx = 1; constraintsCmb.gridy = 0;
			constraintsCmb.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsCmb.weightx = 1.0;
			constraintsCmb.insets = new java.awt.Insets(1, 1, 1, 1);
			ivjJPanel1.add(getxslsCombo(), constraintsCmb);
						
						java.awt.GridBagConstraints constraintsLbl = new java.awt.GridBagConstraints();
			constraintsLbl.gridx = 0; constraintsLbl.gridy = 0;
			constraintsLbl.insets = new java.awt.Insets(1, 1, 1, 1);
			ivjJPanel1.add(getJLabel5(), constraintsLbl);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel1;
}
/**
 * Return the JPanel1FlowLayout property value.
 * @return java.awt.FlowLayout
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.FlowLayout getJPanel1FlowLayout() {
	java.awt.FlowLayout ivjJPanel1FlowLayout = null;
	try {
		/* Create part */
		ivjJPanel1FlowLayout = new java.awt.FlowLayout();
		ivjJPanel1FlowLayout.setAlignment(java.awt.FlowLayout.LEFT);
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	};
	return ivjJPanel1FlowLayout;
}
/**
 * Return the JSplitPane1 property value.
 * @return javax.swing.JSplitPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JSplitPane getJSplitPane1() {
	if (ivjJSplitPane1 == null) {
		try {
			ivjJSplitPane1 = new javax.swing.JSplitPane(javax.swing.JSplitPane.HORIZONTAL_SPLIT);
			ivjJSplitPane1.setName("JSplitPane1");
			getJSplitPane1().add(getxmlAttribs(), "right");
			getJSplitPane1().add(getxmlTree(), "left");
			// user code begin {1}
						ivjJSplitPane1.setDividerLocation(0.66);
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJSplitPane1;
}
/**
 * Return the loadBtn property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getloadBtn() {
	if (ivjloadBtn == null) {
		try {
			ivjloadBtn = new javax.swing.JButton();
			ivjloadBtn.setName("loadBtn");
			ivjloadBtn.setFont(new java.awt.Font("dialog", 0, 10));
			ivjloadBtn.setText("Reload");
			ivjloadBtn.setMargin(new java.awt.Insets(0, 1, 0, 1));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjloadBtn;
}
/**
 * Return the refreshBtn property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getrefreshBtn() {
	if (ivjrefreshBtn == null) {
		try {
			ivjrefreshBtn = new javax.swing.JButton();
			ivjrefreshBtn.setName("refreshBtn");
			ivjrefreshBtn.setFont(new java.awt.Font("dialog", 0, 10));
			ivjrefreshBtn.setText("Refresh");
			ivjrefreshBtn.setMargin(new java.awt.Insets(0, 4, 0, 4));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjrefreshBtn;
}
/**
 * Return the saveBtn property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getsaveBtn() {
	if (ivjsaveBtn == null) {
		try {
			ivjsaveBtn = new javax.swing.JButton();
			ivjsaveBtn.setName("saveBtn");
			ivjsaveBtn.setFont(new java.awt.Font("dialog", 0, 10));
			ivjsaveBtn.setText("Save");
			ivjsaveBtn.setMargin(new java.awt.Insets(0, 4, 0, 4));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjsaveBtn;
}
/**
 * Return the splitPane1 property value.
 * @return javax.swing.JSplitPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JSplitPane getsplitPane1() {
	if (ivjsplitPane1 == null) {
		try {
			ivjsplitPane1 = new javax.swing.JSplitPane(javax.swing.JSplitPane.VERTICAL_SPLIT);
			ivjsplitPane1.setName("splitPane1");
						ivjJSplitPane1.setDividerLocation(0.75);
			getsplitPane1().add(getdocPan(), "top");
			getsplitPane1().add(getdtdPan(), "bottom");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjsplitPane1;
}
/**
 * Return the StatusPan property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getStatusPan() {
	if (ivjStatusPan == null) {
		try {
			ivjStatusPan = new javax.swing.JPanel();
			ivjStatusPan.setName("StatusPan");
			ivjStatusPan.setLayout(getStatusPanFlowLayout());
			getStatusPan().add(getJLabel6(), getJLabel6().getName());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStatusPan;
}
/**
 * Return the StatusPanFlowLayout property value.
 * @return java.awt.FlowLayout
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.FlowLayout getStatusPanFlowLayout() {
	java.awt.FlowLayout ivjStatusPanFlowLayout = null;
	try {
		/* Create part */
		ivjStatusPanFlowLayout = new java.awt.FlowLayout();
		ivjStatusPanFlowLayout.setAlignment(java.awt.FlowLayout.LEFT);
		ivjStatusPanFlowLayout.setVgap(2);
		ivjStatusPanFlowLayout.setHgap(2);
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	};
	return ivjStatusPanFlowLayout;
}
/**
 * Return the TextTab property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getTextTab() {
	if (ivjTextTab == null) {
		try {
			ivjTextTab = new javax.swing.JPanel();
			ivjTextTab.setName("TextTab");
			ivjTextTab.setLayout(new java.awt.BorderLayout());
			getTextTab().add(getsplitPane1(), "Center");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjTextTab;
}
/**
 * Return the ToolBar property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getToolBar() {
	if (ivjToolBar == null) {
		try {
			ivjToolBar = new javax.swing.JPanel();
			ivjToolBar.setName("ToolBar");
			ivjToolBar.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsJLabel3 = new java.awt.GridBagConstraints();
			constraintsJLabel3.gridx = 0; constraintsJLabel3.gridy = 0;
			constraintsJLabel3.anchor = java.awt.GridBagConstraints.EAST;
			getToolBar().add(getJLabel3(), constraintsJLabel3);

			java.awt.GridBagConstraints constraintsidTxt = new java.awt.GridBagConstraints();
			constraintsidTxt.gridx = 1; constraintsidTxt.gridy = 0;
			constraintsidTxt.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsidTxt.weightx = 1.0;
			//constraintsidTxt.insets = new java.awt.Insets(0, 4, 0, 2);
			getToolBar().add(getidTxt(), constraintsidTxt);

			java.awt.GridBagConstraints constraintssaveBtn = new java.awt.GridBagConstraints();
			constraintssaveBtn.gridx = 2; constraintssaveBtn.gridy = 0;
			constraintssaveBtn.anchor = java.awt.GridBagConstraints.EAST;
			//constraintssaveBtn.insets = new java.awt.Insets(0, 2, 0, 2);
			getToolBar().add(getsaveBtn(), constraintssaveBtn);

			java.awt.GridBagConstraints constraintscloseLbl = new java.awt.GridBagConstraints();
			constraintscloseLbl.gridx = 3; constraintscloseLbl.gridy = 0;
			constraintscloseLbl.anchor = java.awt.GridBagConstraints.EAST;
			//constraintscloseLbl.insets = new java.awt.Insets(0, 2, 0, 4);
			getToolBar().add(getcloseLbl(), constraintscloseLbl);

			java.awt.GridBagConstraints constraintsJLabel4 = new java.awt.GridBagConstraints();
			constraintsJLabel4.gridx = 0; constraintsJLabel4.gridy = 1;
			constraintsJLabel4.anchor = java.awt.GridBagConstraints.EAST;
			//constraintsJLabel4.insets = new java.awt.Insets(0, 4, 0, 0);
			getToolBar().add(getJLabel4(), constraintsJLabel4);

			java.awt.GridBagConstraints constraintsurlTxt = new java.awt.GridBagConstraints();
			constraintsurlTxt.gridx = 1; constraintsurlTxt.gridy = 1;
			constraintsurlTxt.gridwidth = 2;
			constraintsurlTxt.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsurlTxt.weightx = 1.0;
			//constraintsurlTxt.insets = new java.awt.Insets(0, 4, 0, 2);
			getToolBar().add(geturlTxt(), constraintsurlTxt);

			java.awt.GridBagConstraints constraintsloadBtn = new java.awt.GridBagConstraints();
			constraintsloadBtn.gridx = 3; constraintsloadBtn.gridy = 1;
			//constraintsloadBtn.insets = new java.awt.Insets(0, 2, 0, 4);
			getToolBar().add(getloadBtn(), constraintsloadBtn);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjToolBar;
}
/**
 * Return the urlTxt property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField geturlTxt() {
	if (ivjurlTxt == null) {
		try {
			ivjurlTxt = new javax.swing.JTextField();
			ivjurlTxt.setName("urlTxt");
			ivjurlTxt.setBorder(new javax.swing.border.CompoundBorder());
						ivjurlTxt.setBackground(java.awt.SystemColor.control);
			ivjurlTxt.setText("http://www.w3.org/1999/02/22-rdf-syntax");
			ivjurlTxt.setEditable(true);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjurlTxt;
}
/**
 * Return the xmlAttribs property value.
 * @return com.ibm.xml.attributeview.XMLAttributeView
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.ibm.xml.attributeview.XMLAttributeView getxmlAttribs() {
	if (ivjxmlAttribs == null) {
		try {
			ivjxmlAttribs = new com.ibm.xml.attributeview.XMLAttributeView();
			ivjxmlAttribs.setName("xmlAttribs");
						ivjxmlAttribs.setMinimumSize(new java.awt.Dimension(100, 100));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjxmlAttribs;
}
/**
 * Return the XMLSourceView1 property value.
 * @return com.ibm.xml.srcview.XMLSourceView
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.ibm.xml.srcview.XMLSourceView getXMLSourceView1() {
	if (ivjXMLSourceView1 == null) {
		try {
			ivjXMLSourceView1 = new com.ibm.xml.srcview.XMLSourceView();
			ivjXMLSourceView1.setName("XMLSourceView1");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjXMLSourceView1;
}
/**
 * Return the XMLTab property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getXMLTab() {
	if (ivjXMLTab == null) {
		try {
			ivjXMLTab = new javax.swing.JPanel();
			ivjXMLTab.setName("XMLTab");
			ivjXMLTab.setLayout(new java.awt.BorderLayout());
			getXMLTab().add(getJSplitPane1(), "Center");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjXMLTab;
}
/**
 * Return the XMLTabs property value.
 * @return javax.swing.JTabbedPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTabbedPane getXMLTabs() {
	if (ivjXMLTabs == null) {
		try {
			ivjXMLTabs = new javax.swing.JTabbedPane();
			ivjXMLTabs.setName("XMLTabs");
						ivjXMLTabs.setFont(new java.awt.Font("dialog", 0, 10));
			ivjXMLTabs.insertTab("XML", null, getXMLTab(), null, 0);
			ivjXMLTabs.insertTab("HTML", null, getHTMLTab(), null, 1);
			ivjXMLTabs.insertTab("Text", null, getTextTab(), null, 2);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjXMLTabs;
}
/**
 * Return the xmlTree property value.
 * @return com.ibm.xml.treeview.XMLTreeView
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.ibm.xml.treeview.XMLTreeView getxmlTree() {
	if (ivjxmlTree == null) {
		try {
			ivjxmlTree = new com.ibm.xml.treeview.XMLTreeView();
			ivjxmlTree.setName("xmlTree");
						ivjxmlTree.setMinimumSize(new java.awt.Dimension(100, 100));
			ivjxmlTree.setAttributeVisibility(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjxmlTree;
}
/**
 * Return the xslsCombo property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getxslsCombo() {
	if (ivjxslsCombo == null) {
		try {
			ivjxslsCombo = new javax.swing.JComboBox();
			ivjxslsCombo.setName("xslsCombo");
			ivjxslsCombo.setPreferredSize(new java.awt.Dimension(130, 21));
			ivjxslsCombo.setFont(new java.awt.Font("dialog", 0, 10));
			ivjxslsCombo.setMaximumSize(new java.awt.Dimension(32767, 21));
			ivjxslsCombo.setMinimumSize(new java.awt.Dimension(126, 21));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjxslsCombo;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getcloseLbl().addActionListener(new java.awt.event.ActionListener() {
		public void actionPerformed(java.awt.event.ActionEvent e) {
			connEtoC1(e);
		};
	});
	getdomGenerator().addPropertyChangeListener(new java.beans.PropertyChangeListener() {
		public void propertyChange(java.beans.PropertyChangeEvent evt) {
			if ((evt.getPropertyName().equals("result"))) 
				connPtoP6SetTarget();
		};
	});
	getdomGenerator().addPropertyChangeListener(new java.beans.PropertyChangeListener() {
		public void propertyChange(java.beans.PropertyChangeEvent evt) {
			if ((evt.getPropertyName().equals("result"))) 
				connPtoP1SetTarget();
		};
	});
	getdomGenerator().addPropertyChangeListener(new java.beans.PropertyChangeListener() {
		public void propertyChange(java.beans.PropertyChangeEvent evt) {
			if ((evt.getPropertyName().equals("result"))) 
				connPtoP2SetTarget();
		};
	});
	getxmlTree().addPropertyChangeListener(new java.beans.PropertyChangeListener() {
		public void propertyChange(java.beans.PropertyChangeEvent evt) {
			if ((evt.getPropertyName().equals("selectedNode"))) 
				connPtoP3SetTarget();
		};
	});
	getxmlTree().addPropertyChangeListener(new java.beans.PropertyChangeListener() {
		public void propertyChange(java.beans.PropertyChangeEvent evt) {
			if ((evt.getPropertyName().equals("selectedNode"))) 
				connPtoP4SetTarget();
		};
	});
	getxmlTree().addPropertyChangeListener(new java.beans.PropertyChangeListener() {
		public void propertyChange(java.beans.PropertyChangeEvent evt) {
			if ((evt.getPropertyName().equals("selectedNode"))) 
				connPtoP7SetTarget();
		};
	});
	getloadBtn().addActionListener(new java.awt.event.ActionListener() {
		public void actionPerformed(java.awt.event.ActionEvent e) {
			connEtoC2(e);
		};
	});
		getrefreshBtn().addActionListener(new java.awt.event.ActionListener() {
		public void actionPerformed(java.awt.event.ActionEvent e) {
			connEtoC3(e);
		};
	});
	getxslsCombo().addActionListener(new java.awt.event.ActionListener() {
		public void actionPerformed(java.awt.event.ActionEvent e) {
			connEtoC4(e);
		};
	});
		getBrowser1().addPropertyChangeListener(new java.beans.PropertyChangeListener() {
		public void propertyChange(java.beans.PropertyChangeEvent evt) {
			if ((evt.getPropertyName().equals("statusString"))) 
				connPtoP8SetTarget();
		};
	});
	connPtoP5SetTarget();
	connPtoP6SetTarget();
	connPtoP1SetTarget();
	connPtoP2SetTarget();
	connPtoP3SetTarget();
	connPtoP4SetTarget();
	connPtoP7SetTarget();
		connPtoP8SetTarget();
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("XMLEditorTab");
		setLayout(new java.awt.BorderLayout());
		setSize(397, 334);
		add(getToolBar(), "North");
		add(getXMLTabs(), "Center");
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * 
 */
public void initialize(URL url, ContentObserver obs, 
					   JTabbedPane parent, TransacOrigin trOrigin) 
{
	this.url = url;
	this.obs = obs;
	this.parent = parent;
	this.trOrigin = trOrigin;

	this.ivjurlTxt.setText(url.toString());
	this.ivjidTxt.setText(obs.getIdElem());
	if (!obs.isWriter())
		ivjsaveBtn.setEnabled(false);
	
	this.ivjdomGenerator.setInputXmlURLLocation(url);
	refreshBtn_ActionPerformed();
}
/**
 * Comment
 */
public void loadBtn_ActionPerformed() 
{
	try
	{
		ivjdomGenerator.setInputXmlURLLocation(new URL(ivjurlTxt.getText()));
	}
	catch(java.net.MalformedURLException e)
	{
		System.out.println("Erroneous URL: "+e);
		ivjdomGenerator.setInputXmlFileLocation(ivjurlTxt.getText());
	}
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try 
	{
		URL url = new URL("file:///C:/WINDOWS/Escritorio/PFC/Desarrollo/archive.xml");
		 
		dlg = new javax.swing.JDialog();
		XMLEditorTab aXMLEditorTab;
		aXMLEditorTab = new XMLEditorTab();
		aXMLEditorTab.initialize(url, new ContentObserver("/root/internet/xml/kxml/archive.xml", false), 
										 null, null);
		dlg.setContentPane(aXMLEditorTab);
		dlg.setSize(aXMLEditorTab.getSize());
		/*frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});*/
		dlg.setVisible(true);
	}
	catch (java.net.MalformedURLException e)
	{
		System.err.println("Erroneous URL: " + e);
	}
	catch (Throwable exception) 
	{
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}
public void refreshBtn_ActionPerformed() 
{
	String dtdName = ivjdomGenerator.getResult().getDoctype().getName();
	try
	{
		String[] xsls = trOrigin.getXSLs(dtdName);
		if (ivjxslsCombo.getItemCount() > 0)
			ivjxslsCombo.removeAllItems();
		for(int i=0; i<(xsls.length/2); i++)
			ivjxslsCombo.addItem(xsls[i*2]+"="+xsls[i*2+1]);
	}
	catch(Exception e)
	{
		JOptionPane.showMessageDialog(null, e.getMessage(),
						"Error", JOptionPane.ERROR_MESSAGE);
	}
}
}
